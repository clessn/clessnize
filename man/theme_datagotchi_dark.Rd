% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/histoires_datagochi_usa.R
\name{theme_datagotchi_dark}
\alias{theme_datagotchi_dark}
\title{Theme Datagotchi Dark}
\usage{
theme_datagotchi_dark(
  base_size = 11,
  base_family = "PixelOperatorSC",
  base_line_size = base_size/22,
  base_rect_size = base_size/22,
  half_line = base_size/2,
  base_margin = base_size,
  primary_colour = "white",
  secondary_colour = "#f2f2f2",
  minor_colour = "#525252",
  bg_colour = "#494949",
  strip_colour = "grey80"
)
}
\arguments{
\item{base_size}{Numeric, the base font size. Default is 11.}

\item{base_family}{Character, the base font family. Default is "PixelOperatorSC".}

\item{base_line_size}{Numeric, the base line size. Default is `base_size / 22`.}

\item{base_rect_size}{Numeric, the base rectangle size. Default is `base_size / 22`.}

\item{half_line}{Numeric, half the line size. Default is `base_size / 2`.}

\item{base_margin}{Numeric, the base margin size. Default is `base_size`.}

\item{primary_colour}{Character, the primary color used in the theme. Default is "black".}

\item{secondary_colour}{Character, the secondary color used in the theme. Default is "grey30".}

\item{minor_colour}{Character, the color for minor elements like grid lines. Default is "#f7f7f7".}

\item{bg_colour}{Character, the background color. Default is "white".}

\item{strip_colour}{Character, the strip background color. Default is "white".}
}
\value{
A ggplot2 theme object.
}
\description{
A custom ggplot2 theme that applies the PixelOperatorSC or WebFont fonts,
depending on the user's selection, with various aesthetic adjustments.
}
\details{
This theme is part of the `clessnize` package and is designed to integrate custom fonts
into ggplot2 visualizations with minimal configuration. The function automatically checks
if the required fonts are available, and loads them if necessary. The `showtext` package
is used to ensure that the fonts render correctly.
}
\examples{
\dontrun{
library(ggplot2)
data <- mtcars
ggplot(data, aes(x = mpg, y = wt)) +
  geom_point() +
  theme_datagotchi_light()
}

}
